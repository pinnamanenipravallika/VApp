// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace VApp.Entities
{
    public partial class VaccinationdbContext : DbContext
    {
        public VaccinationdbContext()
        {
        }

        public VaccinationdbContext(DbContextOptions<VaccinationdbContext> options) : base(options)
        {
        }

        public virtual DbSet<AffectedEmployee> AffectedEmployees { get; set; }
        public virtual DbSet<AffectedFamilyDetail> AffectedFamilyDetails { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<DoseType> DoseTypes { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<RelationshipType> RelationshipTypes { get; set; }
        public virtual DbSet<RoleType> RoleTypes { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Taluk> Taluks { get; set; }
        public virtual DbSet<VaccinationDetail> VaccinationDetails { get; set; }
        public virtual DbSet<VaccinationName> VaccinationNames { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<AffectedFamilyDetail>(entity =>
            {
                entity.Property(e => e.MemberName).IsUnicode(false);

                entity.HasOne(d => d.Relationship)
                    .WithMany(p => p.AffectedFamilyDetails)
                    .HasForeignKey(d => d.RelationshipId)
                    .HasConstraintName("FK__AffectedF__relat__3D5E1FD2");
            });

            modelBuilder.Entity<Country>(entity =>
            {
                entity.Property(e => e.Code).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);
            });

            modelBuilder.Entity<Department>(entity =>
            {
                entity.Property(e => e.Name).IsUnicode(false);
            });

            modelBuilder.Entity<Designation>(entity =>
            {
                entity.Property(e => e.Name).IsUnicode(false);
            });

            modelBuilder.Entity<District>(entity =>
            {
                entity.Property(e => e.Code).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);

                entity.HasOne(d => d.State)
                    .WithMany(p => p.Districts)
                    .HasForeignKey(d => d.StateId)
                    .HasConstraintName("FK__Districts__state__3E52440B");
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.Property(e => e.Address).IsUnicode(false);

                entity.Property(e => e.Code).IsUnicode(false);

                entity.Property(e => e.Email).IsUnicode(false);

                entity.Property(e => e.FirstName).IsUnicode(false);

                entity.Property(e => e.LastName).IsUnicode(false);

                entity.Property(e => e.Mobile).IsUnicode(false);

                entity.Property(e => e.Password).IsUnicode(false);

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FK__Employees__roleI__3F466844");
            });

            modelBuilder.Entity<RelationshipType>(entity =>
            {
                entity.Property(e => e.TypeName).IsUnicode(false);
            });

            modelBuilder.Entity<RoleType>(entity =>
            {
                entity.Property(e => e.TypeName).IsUnicode(false);
            });

            modelBuilder.Entity<State>(entity =>
            {
                entity.Property(e => e.Code).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);

                entity.HasOne(d => d.Country)
                    .WithMany(p => p.States)
                    .HasForeignKey(d => d.CountryId)
                    .HasConstraintName("FK__States__countryI__403A8C7D");
            });

            modelBuilder.Entity<Taluk>(entity =>
            {
                entity.Property(e => e.Code).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);

                entity.HasOne(d => d.District)
                    .WithMany(p => p.Taluks)
                    .HasForeignKey(d => d.DistrictId)
                    .HasConstraintName("FK__Taluks__district__412EB0B6");
            });

            modelBuilder.Entity<VaccinationDetail>(entity =>
            {
                entity.Property(e => e.HospitalName).IsUnicode(false);
            });

            modelBuilder.Entity<VaccinationName>(entity =>
            {
                entity.Property(e => e.Name).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}